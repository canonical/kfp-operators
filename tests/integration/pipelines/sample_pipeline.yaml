# This pipeline was generated using the sample_pipeline_execution_order.py in this directory
# Please do not edit this file directly
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: execution-order-pipeline-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.0, pipelines.kubeflow.org/pipeline_compilation_time: '2023-07-03T09:06:28.536484',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "A pipeline to demonstrate
      execution order management.", "inputs": [{"default": "message 1", "name": "text1",
      "optional": true, "type": "String"}, {"default": "message 2", "name": "text2",
      "optional": true, "type": "String"}], "name": "execution-order-pipeline"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.0}
spec:
  entrypoint: execution-order-pipeline
  templates:
  - name: echo1-op
    container:
      args: [--text1, '{{inputs.parameters.text1}}']
      command:
      - sh
      - -ec
      - |
        program_path=$(mktemp)
        printf "%s" "$0" > "$program_path"
        python3 -u "$program_path" "$@"
      - |
        def echo1_op(text1):
          print(text1)

        import argparse
        _parser = argparse.ArgumentParser(prog='Echo1 op', description='')
        _parser.add_argument("--text1", dest="text1", type=str, required=True, default=argparse.SUPPRESS)
        _parsed_args = vars(_parser.parse_args())

        _outputs = echo1_op(**_parsed_args)
      image: python:3.7
    inputs:
      parameters:
      - {name: text1}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"implementation": {"container":
          {"args": ["--text1", {"inputValue": "text1"}], "command": ["sh", "-ec",
          "program_path=$(mktemp)\nprintf \"%s\" \"$0\" > \"$program_path\"\npython3
          -u \"$program_path\" \"$@\"\n", "def echo1_op(text1):\n  print(text1)\n\nimport
          argparse\n_parser = argparse.ArgumentParser(prog=''Echo1 op'', description='''')\n_parser.add_argument(\"--text1\",
          dest=\"text1\", type=str, required=True, default=argparse.SUPPRESS)\n_parsed_args
          = vars(_parser.parse_args())\n\n_outputs = echo1_op(**_parsed_args)\n"],
          "image": "python:3.7"}}, "inputs": [{"name": "text1", "type": "String"}],
          "name": "Echo1 op"}', pipelines.kubeflow.org/component_ref: '{}', pipelines.kubeflow.org/arguments.parameters: '{"text1":
          "{{inputs.parameters.text1}}"}'}
  - name: echo2-op
    container:
      args: [--text2, '{{inputs.parameters.text2}}']
      command:
      - sh
      - -ec
      - |
        program_path=$(mktemp)
        printf "%s" "$0" > "$program_path"
        python3 -u "$program_path" "$@"
      - |
        def echo2_op(text2):
          print(text2)

        import argparse
        _parser = argparse.ArgumentParser(prog='Echo2 op', description='')
        _parser.add_argument("--text2", dest="text2", type=str, required=True, default=argparse.SUPPRESS)
        _parsed_args = vars(_parser.parse_args())

        _outputs = echo2_op(**_parsed_args)
      image: python:3.7
    inputs:
      parameters:
      - {name: text2}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"implementation": {"container":
          {"args": ["--text2", {"inputValue": "text2"}], "command": ["sh", "-ec",
          "program_path=$(mktemp)\nprintf \"%s\" \"$0\" > \"$program_path\"\npython3
          -u \"$program_path\" \"$@\"\n", "def echo2_op(text2):\n  print(text2)\n\nimport
          argparse\n_parser = argparse.ArgumentParser(prog=''Echo2 op'', description='''')\n_parser.add_argument(\"--text2\",
          dest=\"text2\", type=str, required=True, default=argparse.SUPPRESS)\n_parsed_args
          = vars(_parser.parse_args())\n\n_outputs = echo2_op(**_parsed_args)\n"],
          "image": "python:3.7"}}, "inputs": [{"name": "text2", "type": "String"}],
          "name": "Echo2 op"}', pipelines.kubeflow.org/component_ref: '{}', pipelines.kubeflow.org/arguments.parameters: '{"text2":
          "{{inputs.parameters.text2}}"}'}
  - name: execution-order-pipeline
    inputs:
      parameters:
      - {name: text1}
      - {name: text2}
    dag:
      tasks:
      - name: echo1-op
        template: echo1-op
        arguments:
          parameters:
          - {name: text1, value: '{{inputs.parameters.text1}}'}
      - name: echo2-op
        template: echo2-op
        dependencies: [echo1-op]
        arguments:
          parameters:
          - {name: text2, value: '{{inputs.parameters.text2}}'}
  arguments:
    parameters:
    - {name: text1, value: message 1}
    - {name: text2, value: message 2}
  serviceAccountName: pipeline-runner
