# reusable workflow triggered by other actions
name: CI

on:
  workflow_call:
    secrets:
      CHARMCRAFT_CREDENTIALS:
        required: true

jobs:
  lib-check:
    name: Check libraries
    strategy:
      matrix:
        charm:
          - kfp-api
          - kfp-persistence
          - kfp-profile-controller
          - kfp-schedwf
          - kfp-ui
          - kfp-viewer
          - kfp-viz
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/_quality-checks.yaml@main
    secrets: inherit
    with:
        charm-path: ./charms/${{ matrix.charm }}

  lint:
    name: Lint
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        charm:
          - kfp-api
          - kfp-persistence
          - kfp-profile-controller
          - kfp-schedwf
          - kfp-ui
          - kfp-viewer
          - kfp-viz
    steps:
      - uses: actions/checkout@v3
      - run: python3 -m pip install tox
      - run: tox -e ${{ matrix.charm }}-lint

  unit:
    name: Unit tests
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        charm:
          - kfp-api
          - kfp-persistence
          - kfp-profile-controller
          - kfp-schedwf
          - kfp-ui
          - kfp-viewer
          - kfp-viz
    steps:
      - uses: actions/checkout@v3
      - run: python3 -m pip install tox
      - run: tox -e ${{ matrix.charm }}-unit

  integration:
    name: Integration tests (microk8s)
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        charm:
          - kfp-profile-controller
          - kfp-api
    steps:
      # Ideally we'd use self-hosted runners, but this effort is still not stable
      # This action will remove unused software (dotnet, haskell, android libs, codeql,
      # and docker images) from the GH runner, which will liberate around 60 GB of storage
      # distributed in 40GB for root and around 20 for a mnt point.
      - name: Maximise GH runner space
        uses: easimon/maximize-build-space@v7
        with:
          root-reserve-mb: 40960
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
      - uses: actions/checkout@v3
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.24/stable
          juju-channel: 2.9/stable
          charmcraft-channel: latest/candidate

      # TODO: Remove once the actions-operator does this automatically
      - name: Configure kubectl
        run: |
          sg microk8s -c "microk8s config > ~/.kube/config"

      - run: |
          sg microk8s -c "tox -e ${{ matrix.charm }}-integration"

      # Collect debug logs if failed
      - name: Dump Juju/k8s logs on failure
        uses: canonical/charm-logdump-action@main
        if: failure()
        with:
          app: ${{ matrix.charm }}
          model: testing

  test-bundle:
    name: Test the bundle
    runs-on: ubuntu-20.04

    steps:
      # This is a workaround for https://github.com/canonical/kfp-operators/issues/250
      # Ideally we'd use self-hosted runners, but this effort is still not stable
      # This action will remove unused software (dotnet, haskell, android libs, codeql,
      # and docker images) from the GH runner, which will liberate around 60 GB of storage
      # distributed in 40GB for root and around 20 for a mnt point.
      - name: Maximise GH runner space
        uses: easimon/maximize-build-space@v7
        with:
          root-reserve-mb: 40960
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.24/stable
          juju-channel: 2.9/stable
          charmcraft-channel: latest/candidate

      # TODO: Remove once https://bugs.launchpad.net/juju/+bug/2024897 is fixed
      - name: Refresh Juju snap
        run: |
          sudo snap refresh juju --revision 22345

      # Required until https://github.com/charmed-kubernetes/actions-operator/pull/33 is merged
      - run: |
          sg microk8s -c "microk8s enable metallb:'10.64.140.43-10.64.140.49,192.168.0.105-192.168.0.111'"

      # TODO: Remove once the actions-operator does this automatically
      - name: Configure kubectl
        run: |
          sg microk8s -c "microk8s config > ~/.kube/config"

      - name: Run test
        run: |
          # Requires the model to be called kubeflow due to kfp-viewer
          juju add-model kubeflow
          # Run integration tests against the 1.7 generic install bundle definition
          # Using destructive mode because of https://github.com/canonical/charmcraft/issues/1132
          # and https://github.com/canonical/charmcraft/issues/1138
          tox -e bundle-integration -- --model kubeflow --bundle=./tests/integration/bundles/kfp_1.7_stable_install.yaml.j2 --destructive-mode

      - name: Get all
        run: kubectl get all -A
        if: failure()

      - name: Get juju status
        run: juju status
        if: failure()

      - name: Save relevant debug artifacts
        if: always()
        run: |
          mkdir ~/kfp-operators-debug-logs
          juju debug-log --replay | tee ~/kfp-operators-debug-logs/juju-debug-log.log
          juju status | tee ~/kfp-operators-debug-logs/juju-status.log
          bash -c "cp ~/.local/state/charmcraft/log/* ~/kfp-operators-debug-logs/"
          sg microk8s -c "microk8s.kubectl describe deployments -A | tee ~/kfp-operators-debug-logs/deployments.log"
          sg microk8s -c "microk8s.kubectl describe pods -A | tee ~/kfp-operators-debug-logs/pods.log"
          sg microk8s -c "microk8s.kubectl describe workloads -A | tee ~/kfp-operators-debug-logs/workloads.log"

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: kfp-operators-debug-logs
          path: ~/kfp-operators-debug-logs
